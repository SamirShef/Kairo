name: CI

on:
  push:
#    tags:
#      - '*'
  workflow_dispatch:

jobs:
  build-linux:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Install LLVM 20
      run: |
        wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | sudo apt-key add -
        echo "deb http://apt.llvm.org/noble/ llvm-toolchain-noble-20 main" | sudo tee /etc/apt/sources.list.d/llvm.list
        sudo apt-get update
        sudo apt-get install -y llvm-20-dev clang-20

    - name: Create Build Directory
      run: mkdir -p build

    - name: Configure CMake
      run: cmake -B build -DCMAKE_BUILD_TYPE=Release -DLLVM_DIR=$(llvm-config-20 --cmakedir)

    - name: Build
      run: cmake --build build --config Release

  build-windows:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v4

    - name: Setup vcpkg
      uses: microsoft/vcpkg-action@v1
      with:
        # Use builtin cache for binary artifacts
        cacheHitVar: VCPKG_CACHE_HIT

    - name: Install LLVM via vcpkg (x64-windows)
      shell: pwsh
      run: |
        vcpkg version
        vcpkg install llvm:x64-windows

    - name: Create Build Directory
      run: cmake -E make_directory build

    - name: Configure CMake (MSVC)
      shell: pwsh
      run: |
        if (-not $env:VCPKG_ROOT) { Write-Error "VCPKG_ROOT is not set" }
        $toolchain = Join-Path $env:VCPKG_ROOT 'scripts/buildsystems/vcpkg.cmake'
        $llvmDir = Join-Path $env:VCPKG_ROOT 'installed/x64-windows/share/llvm'
        if (-not (Test-Path (Join-Path $llvmDir 'LLVMConfig.cmake'))) {
          Write-Host "Diagnostics: listing $llvmDir"
          if (Test-Path $llvmDir) { Get-ChildItem -Path $llvmDir -Recurse -ErrorAction SilentlyContinue | Select-Object -First 50 | ForEach-Object { $_.FullName } }
          Write-Error "LLVMConfig.cmake not found in vcpkg install at $llvmDir"
        }
        Write-Host "Using LLVM_DIR=$llvmDir"
        cmake -B build -G "Visual Studio 17 2022" -A x64 -DCMAKE_TOOLCHAIN_FILE="$toolchain" -DVCPKG_TARGET_TRIPLET=x64-windows -DLLVM_DIR="$llvmDir" -DCMAKE_BUILD_TYPE=Release

    - name: Build
      run: cmake --build build --config Release