name: CI

on:
  push #:
#    tags:
#      - 'v*'
#  workflow_dispatch:

jobs:
  build-linux:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Install LLVM 20
      run: |
        wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | sudo apt-key add -
        echo "deb http://apt.llvm.org/noble/ llvm-toolchain-noble-20 main" | sudo tee /etc/apt/sources.list.d/llvm.list
        sudo apt-get update
        sudo apt-get install -y llvm-20-dev clang-20

    - name: Create Build Directory
      run: mkdir -p build

    - name: Configure CMake
      run: cmake -B build -DCMAKE_BUILD_TYPE=Release -DLLVM_DIR=$(llvm-config-20 --cmakedir)

    - name: Build
      run: cmake --build build --config Release
  
  windowsBuild:
      name: Windows Build
      runs-on: windows-2022
      env:
          BUILD_PROJECT: llvm
          BUILD_MASTER: false
          LLVM_VERSION: 20.1.0
          SCCACHE_DIR: C:\\Users\\runneradmin\\sccache
          SCCACHE_CACHE_SIZE: 5G
          CMAKE_COMPILER_LAUNCHER_FLAGS: -DCMAKE_C_COMPILER_LAUNCHER=sccache -DCMAKE_CXX_COMPILER_LAUNCHER=sccache

      strategy:
          fail-fast: false
          matrix:
              CRT:
              -   msvcrt
              -   libcmt

              TARGET_CPU:
              -   x86
              -   amd64

              CONFIGURATION:
              -   Release

      steps:
      -   name: Checkout repo
          uses: actions/checkout@v3

      -   name: Restore sccache cache
          uses: actions/cache@v4
          with:
              path: |
                  C:\\Users\\runneradmin\\sccache
              key: ${{ runner.os }}-sccache-${{ env.LLVM_VERSION }}-${{ matrix.CRT }}-${{ matrix.TARGET_CPU }}-${{ matrix.CONFIGURATION }}

      -   name: Install sccache and 7zip
          shell: powershell
          run: |
              choco install sccache -y --no-progress
              choco install 7zip -y --no-progress

      -   name: Install
          shell: cmd
          run: |
              call %GITHUB_WORKSPACE%\set-env.bat msvc17 ${{matrix.CRT}} ${{matrix.TARGET_CPU}} ${{matrix.CONFIGURATION}}
              call %GITHUB_WORKSPACE%\install.bat

      -   name: Build and test
          id: BUILD
          shell: cmd
          run: |
              call %GITHUB_WORKSPACE%\set-env.bat msvc17 ${{matrix.CRT}} ${{matrix.TARGET_CPU}} ${{matrix.CONFIGURATION}}
              call %GITHUB_WORKSPACE%\build.bat
              echo ::set-output name=DEPLOY_FILE::%DEPLOY_FILE%

      -   name: Show sccache stats
          shell: powershell
          run: sccache --show-stats || echo "sccache not available"

      -   name: Release
          uses: softprops/action-gh-release@v1
          if: startsWith(github.ref, 'refs/tags/')
          env:
              GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
          with:
              files: ${{steps.BUILD.outputs.DEPLOY_FILE}}