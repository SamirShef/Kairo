name: CI

on:
  push:
#    tags:
#      - '*'
  workflow_dispatch:

jobs:
  build-linux:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Install LLVM 17
      run: |
        wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | sudo apt-key add -
        echo "deb http://apt.llvm.org/jammy/ llvm-toolchain-jammy-17 main" | sudo tee /etc/apt/sources.list.d/llvm.list
        sudo apt-get update
        sudo apt-get install -y llvm-17-dev clang-17

    - name: Create Build Directory
      run: mkdir -p build

    - name: Configure CMake
      run: cmake -B build -DCMAKE_BUILD_TYPE=Release

    - name: Build
      run: cmake --build build --config Release

  build-windows:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v4

    - name: Download and Install LLVM
      run: |
        # Скачиваем установщик
        $url = "https://github.com/llvm/llvm-project/releases/download/llvmorg-17.0.6/LLVM-17.0.6-win64.exe"
        Invoke-WebRequest -Uri $url -OutFile "llvm-installer.exe"
        
        # Устанавливаем LLVM в тихом режиме
        Start-Process -Wait -FilePath ".\llvm-installer.exe" -ArgumentList "/S", "/D=C:\LLVM"

    - name: Check LLVM installation structure
      run: |
        Write-Host "Checking LLVM installation structure..."
        Get-ChildItem -Path "C:\LLVM" -Recurse -Filter "*config.cmake" | ForEach-Object { Write-Host "Found: $($_.FullName)" }
        if (Test-Path "C:\LLVM\lib\cmake\llvm") {
            Write-Host "LLVM CMake path exists: C:\LLVM\lib\cmake\llvm"
            Get-ChildItem -Path "C:\LLVM\lib\cmake\llvm" | ForEach-Object { Write-Host "  - $($_.Name)" }
        } else {
            Write-Host "LLVM CMake path does not exist at C:\LLVM\lib\cmake\llvm"
            # Поиск альтернативных путей
            Get-ChildItem -Path "C:\LLVM" -Recurse -Filter "*cmake*" -Directory | ForEach-Object { Write-Host "Alternative cmake path: $($_.FullName)" }
        }

    - name: Set correct LLVM path
      run: |
        # Ищем правильный путь к CMake файлам LLVM
        $llvmCmakePath = Get-ChildItem -Path "C:\LLVM" -Recurse -Filter "*config.cmake" | Select-Object -First 1 | ForEach-Object { $_.Directory.FullName }
        if ($llvmCmakePath) {
            Write-Host "Found LLVM CMake files at: $llvmCmakePath"
            echo "LLVM_DIR=$llvmCmakePath" | Out-File -FilePath $env:GITHUB_ENV -Append
        } else {
            # Fallback к стандартному пути
            echo "LLVM_DIR=C:\LLVM\lib\cmake\llvm" | Out-File -FilePath $env:GITHUB_ENV -Append
        }

    - name: Add LLVM to PATH
      run: echo "C:\LLVM\bin" | Out-File -FilePath $env:GITHUB_PATH -Append

    - name: Create Build Directory
      run: mkdir build

    - name: Configure CMake
      run: |
        # Добавляем вывод отладочной информации
        echo "LLVM_DIR is set to: $env:LLVM_DIR"
        cmake -B build -DCMAKE_BUILD_TYPE=Release -G "Visual Studio 17 2022" -DCMAKE_PREFIX_PATH="C:\LLVM" -DLLVM_DIR="$env:LLVM_DIR"

    - name: Build
      run: cmake --build build --config Release